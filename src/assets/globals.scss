@import "./theme.css";

body {
    & > * {
        font-weight: 400;
        font-style: normal;
        font-family: 'Roboto', sans-serif;
    }
}

// tranform
.rotate-180 {
    transform: rotate(180deg);
}

.display-none {
    display: none !important;
}

.text {
    &-center {
        text-align: center;
    }

    &-left {
        text-align: left;
    }

    &-right {
        text-align: right;
    }
}

.dl-text-transform {
    &--uppercase {
        text-transform: uppercase;
    }
    &--lowercase {
        text-transform: lowercase;
    }
    &--capitalize {
        text-transform: capitalize;
    }
    &--none {
        text-transform: none;
    }

    &--default {
        &,
        & > * {
            text-transform: capitalize;
        }
    }
}

/* Inserting a collapsed row between two flex items will make
 * the flex item that comes after it break to a new row */
.break {
    flex-basis: 100%;
    height: 0;
}

/* Use a collapsed column to break to a new column */
.break-column {
    flex-basis: 100%;
    width: 0;
}

.scroll {
    overflow: auto;
}

.scroll::-webkit-scrollbar-thumb {
    background-color: var(--dl-color-lighter);
}

@supports (-moz-appearance: none) {
    .scroll {
        scrollbar-color: var(--dl-color-lighter) transparent;
    }
}

.reactive-scroll {
    .scroll::-webkit-scrollbar-thumb {
        background-color: transparent;
    }
    .scroll:hover::-webkit-scrollbar-thumb {
        background-color: var(--dl-color-lighter);
    }
}

.scroll,
.scroll-x,
.scroll-y {
    -webkit-overflow-scrolling: touch;
    will-change: scroll-position;
}

.row.inline,
.column.inline,
.flex.inline {
    display: inline-flex;
}

.no-wrap {
    flex-wrap: nowrap !important;
}

.justify-center {
    justify-content: center;
}

.justify-between {
    justify-content: space-between;
}

.justify-end {
    justify-content: flex-end;
}

.column {
    flex-direction: column;
}

.row,
.column,
.flex {
    display: flex;
    flex-wrap: wrap;
}

.relative-position {
    position: relative;
}

.cursor-pointer {
    cursor: pointer;
}

.non-selectable {
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
}

.non-draggable {
    user-drag: none;
    -webkit-user-drag: none;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
}

.no-outline {
    outline: 0;
}

.text-center {
    text-align: center;
}

.items-center {
    align-items: center;
}

.items-top {
    align-items: start;
}

.items-bottom {
    align-items: end;
}

.col {
    flex: 10000 1 0%;
}

.full-width {
    width: 100%;
}

.full-height {
    height: 100%;
}


// scrollbar

html {
    // Mozilla Firefox
    scrollbar-width: thin;
    scrollbar-color: var(--dl-color-scrollbar);

    // IE
    scrollbar-face-color: #e4e4e4;
    scrollbar-face-color: var(--dl-color-scrollbar);
}

// Google Chrome & Safari
::-webkit-scrollbar {
    width: 3px;
    height: 3px;
}

::-webkit-scrollbar-thumb {
    background-color: var(--dl-color-scrollbar);
    border-radius: 3px;
}

.flex-column {
    flex-direction: column;
}

.flex-row {
    flex-direction: row;
}

// maybe add this in the future
// .disabled {
//     opacity: 0.6 !important;
// }
// .disabled,  .disabled * {
//     outline: 0 !important;
//     cursor: not-allowed !important;
// }

[disabled] {
    opacity: 0.6 !important;
}
[disabled],
[disabled] * {
    outline: 0 !important;
    cursor: not-allowed !important;
}

@import 'grid';
